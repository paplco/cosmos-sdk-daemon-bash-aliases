# .aliases for CÃ¸smos SDK.
# https://github.com/paplco/cosmos-sdk-daemon-bash-aliases
# Useful commands to add? Open PR. Thanks

# Nice command prompt formatting.
export PS1="\[\033[36m\]\u\[\033[m\]@\[\033[32m\]\h:\[\033[33;1m\]\w\[\033[m\]\$ "
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad

# Load daemon environment variables.
if [ -f ~/.sdkvars ]; then
  . ~/.sdkvars
fi

# General useful shortcuts.
alias home='cd ~/ '
alias ..b='. ~/.bashrc '
alias n='nano '
alias ali='n ~/.sdk_aliases/.aliases '
alias alivars="n ~/.sdkvars "
alias alic='cat ~/.sdk_aliases/.aliases '
alias aliup='cd ~/.sdk_aliases/;gpl;..b;cd ~/'
alias pgen='openssl rand -base64 32 '
alias la='ls -la '
alias rmf='rm -Rf '

# Git.
alias gcp='git commit -a; gpu;'
alias gca='git commit -a '
alias gpl='git pull '
alias gpu='git push '
alias gcm='git commit '
alias gba='git branch -a '
alias gco='git checkout '
alias gcob='git checkout -b '
alias gsw='git switch '
alias gst='git rev-parse HEAD; git status; '
alias gaa='git add -A '
alias gad='git add '
alias gdf='git diff '
alias gfa='git fetch --all '
alias grso='git remote show origin '
alias grro='git remote remove origin '
alias grao='git remote add origin '
alias grup='grro; grao '
alias grou='git config --get remote.origin.url'
alias gig='n .gitignore '
alias gresetmain='git fetch origin; git reset --hard origin/main'
alias gpusubs='git pull --recurse-submodules && git submodule update'
alias glog='git log --graph --decorate --pretty=oneline --abbrev-commit'
git config --global push.default current


# Cosmovisor.
export DAEMON_RESTART_AFTER_UPGRADE=true
export DAEMON_ALLOW_DOWNLOAD_BINARIES=false
export UNSAFE_SKIP_BACKUP=true
export PATH=$PATH:~/.${DAEMON_NAME}/cosmovisor/current/bin/:~/go/bin;
alias cvstart="sudo systemctl start cosmovisor"
alias cvstatus="sudo systemctl status cosmovisor"
alias cvrestart="sudo systemctl restart cosmovisor"
alias cvstop="sudo systemctl stop cosmovisor"
alias cvlog="journalctl -u cosmovisor.service -n 10 -f -o cat "
alias cvlogn="journalctl -u cosmovisor.service -n -o cat  "
alias cvlogg="journalctl -u cosmovisor.service -o cat | grep "
alias cvenable="sudo systemctl enable cosmovisor.service"
alias cvedit="nano /etc/systemd/system/cosmovisor.service"


# Orchestrator.
alias orstart="sudo systemctl start orchestrator"
alias orstatus="sudo systemctl status orchestrator"
alias orrestart="sudo systemctl restart orchestrator"
alias orstop="sudo systemctl stop orchestrator"
alias orlog="journalctl -u orchestrator.service -n 10 -f -o cat "
alias orlogn="journalctl -u orchestrator.service -n -o cat "
alias orlogg="journalctl -u orchestrator.service -o cat | grep "
alias orenable="sudo systemctl enable orchestrator.service"
alias oredit="nano /etc/systemd/system/orchestrator.service"

# App as systemctl service.
alias appstart="sudo systemctl start ${DAEMON_NAME}"
alias appstatus="sudo systemctl status ${DAEMON_NAME}"
alias apprestart="sudo systemctl restart ${DAEMON_NAME}"
alias appstop="sudo systemctl stop ${DAEMON_NAME}"
alias applog="journalctl -u ${DAEMON_NAME}.service -n 10 -f -o cat "
alias applogn="journalctl -u ${DAEMON_NAME}.service -n -o cat "
alias applogg="journalctl -u ${DAEMON_NAME}.service -o cat | grep "
alias appenable="sudo systemctl enable ${DAEMON_NAME}.service"
alias appedit="nano /etc/systemd/system/${DAEMON_NAME}.service"
alias appreload="systemctl daemon-reload"
alias lsservice="systemctl --type=service"

# App shortcuts.
alias app="${DAEMON_NAME} "
alias cdapp="cd ${DAEMON_HOME}; la "
alias cnf="cdapp; cd config; la "
alias cnfe="cnf; n config.toml "
alias bal="app q bank balances ${ACC_ADDR} "
alias acc="app q account ${ACC_ADDR} "
alias val="app keys show ${ACC_ADDR} --bech val"
alias qtx="app q tx "
alias sjq="app status | jq "
alias txbr="home; app tx broadcast tx.json "
alias txn="home; rm tx.json; n tx.json "
alias txwd="home; acc; app tx distribution withdraw-rewards ${VAL_ADDR}  \
  --from=${ACC_ADDR} \
  --chain-id=${CHAIN_ID} \
  --commission \
  --fees=${FEES}${DENOM} \
  --generate-only "
alias tm="app tendermint "
alias tmaddr="tm show-address "
alias tmid="tm show-node-id "
alias tmval="tm show-validator "

# Peers. Thanks @https://github.com/dpdanpittman
# Who your peers are
alias pwho="curl -sS http://localhost:26657/net_info | jq -r '.result.peers[]' | grep 'moniker\|id\|remote_ip' | sed -e 's/[ \t]*//' | sed 's/[\",]//g' | sed 's/^id/\nid/g'; pnum "
alias pmoniker="curl -sS http://localhost:26657/net_info | jq -r '.result.peers[] | \"\(.node_info.moniker)\"'; pnum "
# Numuber of peers
alias pnum="curl -s 127.0.0.1:26657/net_info | grep n_peers "
# Consensus state
alias cstate="curl -s localhost:26657/consensus_state | grep 'height\/round\/step\|start_time\|round\"\|prevotes_bit_array\|precommits_bit_array' | sed -e 's/[ \t]*/\n/' | sed 's/[\",]//g' "

function setsdkvars {
    if [ ! -f ~/.sdkvars ]; then
        cp ~/.sdk_aliases/.sdkvars_template ~/.sdkvars
        nano ~/.sdkvars
    fi
}

# Disk management.
alias dmnt="df -h | grep 'mnt' "
alias dbyid="ls /dev/disk/by-id/"
alias dresize="resize2fs /dev/disk/by-id/$(ls /dev/disk/by-id/)"

# prop wasm check
function checksc {
  ${DAEMON_NAME} q gov proposal $1 --output json | jq -r '.content.wasm_byte_code' | base64 -d | gzip -dc | sha256sum
}

# sdk functions
function qauthz {
  cmd="${DAEMON_NAME} q authz grants-by-granter $1"
  echo $cmd;
  $cmd; 
}
function qfeegrant {
  cmd="${DAEMON_NAME} q feegrant grants-by-granter $1"
  echo $cmd;
  $cmd; 
}
function txsign {
  cmd="${DAEMON_NAME} tx sign tx.json --from valkey --chain-id $CHAIN_ID --fees 5000$DENOM > tx_temp.json && mv tx_temp.json tx.json";
  echo $cmd;
  $cmd;
  
}

#npm
alias nrd="npm run dev"
alias nrb="npm run build"
alias nrs="npm run start"
alias nbs="nrb;nrs"

#usually it
export PATH=$PATH:/usr/local/go/bin

#source additional helper scripts
for file in $HOME/.sdk_aliases/.bash_scripts/*.sh
do
  source "$file"
done

# Load custom aliases if they exist.
if [ -f $HOME/.sdk_aliases/.aliases_custom ]; then
  . $HOME/.sdk_aliases/.aliases_custom 
  echo "LOADED $HOME/.sdk_aliases/.aliases_custom"
fi

df -h

echo "=== ${DAEMON_NAME} aliases loaded v0.1.21 ==="

